{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/dizacademy/dizacademy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:/xampp/htdocs/dizacademy/dizacademy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/dizacademy/dizacademy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"portrait\", \"buttonStyle\", \"linesStyle\", \"style\"],\n    _excluded2 = [\"boxSizing\", \"objectFit\", \"objectPosition\"],\n    _excluded3 = [\"handle\", \"itemOne\", \"itemTwo\", \"onlyHandleDraggable\", \"onPositionChange\", \"portrait\", \"position\", \"boundsPadding\", \"changePositionOnHover\", \"style\"],\n    _excluded4 = [\"style\"];\nimport React, { useRef, useEffect, useCallback, useLayoutEffect, useState, forwardRef } from 'react';\n\nvar ThisArrow = function ThisArrow(_ref) {\n  var flip = _ref.flip;\n  var style = {\n    width: 0,\n    height: 0,\n    borderTop: '8px solid transparent',\n    borderRight: '10px solid',\n    borderBottom: '8px solid transparent',\n    transform: flip ? 'rotate(180deg)' : undefined\n  };\n  return React.createElement(\"div\", {\n    style: style\n  });\n};\n/** Default `handle`. */\n\n\nvar ReactCompareSliderHandle = function ReactCompareSliderHandle(_ref2) {\n  var portrait = _ref2.portrait,\n      buttonStyle = _ref2.buttonStyle,\n      linesStyle = _ref2.linesStyle,\n      style = _ref2.style,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _style = _objectSpread({\n    display: 'flex',\n    flexDirection: portrait ? 'row' : 'column',\n    placeItems: 'center',\n    height: '100%',\n    cursor: portrait ? 'ns-resize' : 'ew-resize',\n    pointerEvents: 'none',\n    color: '#fff'\n  }, style);\n\n  var _linesStyle = _objectSpread({\n    flexGrow: 1,\n    height: portrait ? 2 : '100%',\n    width: portrait ? '100%' : 2,\n    backgroundColor: 'currentColor',\n    pointerEvents: 'auto',\n    boxShadow: '0 0 7px rgba(0,0,0,.35)'\n  }, linesStyle);\n\n  var _buttonStyle = _objectSpread({\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gap: 8,\n    placeContent: 'center',\n    flexShrink: 0,\n    width: 56,\n    height: 56,\n    borderRadius: '50%',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    pointerEvents: 'auto',\n    backdropFilter: 'blur(7px)',\n    WebkitBackdropFilter: 'blur(7px)',\n    boxShadow: '0 0 7px rgba(0,0,0,.35)',\n    transform: portrait ? 'rotate(90deg)' : undefined\n  }, buttonStyle);\n\n  return React.createElement(\"div\", Object.assign({\n    className: \"__rcs-handle-root\"\n  }, props, {\n    style: _style\n  }), React.createElement(\"div\", {\n    className: \"__rcs-handle-line\",\n    style: _linesStyle\n  }), React.createElement(\"div\", {\n    className: \"__rcs-handle-button\",\n    style: _buttonStyle\n  }, React.createElement(ThisArrow, null), React.createElement(ThisArrow, {\n    flip: true\n  })), React.createElement(\"div\", {\n    className: \"__rcs-handle-line\",\n    style: _linesStyle\n  }));\n};\n/**\r\n * Stand-alone CSS utility to make replaced elements (`img`, `video`, etc.) fit their\r\n * container.\r\n */\n\n\nvar styleFitContainer = function styleFitContainer() {\n  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref3$boxSizing = _ref3.boxSizing,\n      boxSizing = _ref3$boxSizing === void 0 ? 'border-box' : _ref3$boxSizing,\n      _ref3$objectFit = _ref3.objectFit,\n      objectFit = _ref3$objectFit === void 0 ? 'cover' : _ref3$objectFit,\n      _ref3$objectPosition = _ref3.objectPosition,\n      objectPosition = _ref3$objectPosition === void 0 ? 'center' : _ref3$objectPosition,\n      props = _objectWithoutProperties(_ref3, _excluded2);\n\n  return _objectSpread({\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    maxWidth: '100%',\n    boxSizing: boxSizing,\n    objectFit: objectFit,\n    objectPosition: objectPosition\n  }, props);\n};\n/** Store the previous supplied value. */\n\n\nvar usePrevious = function usePrevious(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n/**\r\n * Event listener binding hook.\r\n * @param eventName      - Event to bind to.\r\n * @param handler        - Callback handler.\r\n * @param element        - Element to bind to.\r\n * @param handlerOptions - Event handler options.\r\n */\n\n\nvar useEventListener = function useEventListener(eventName, handler, element, handlerOptions) {\n  var savedHandler = useRef();\n  useEffect(function () {\n    savedHandler.current = handler;\n  }, [handler]);\n  useEffect(function () {\n    // Make sure element supports addEventListener.\n    if (!(element && element.addEventListener)) return; // Create event listener that calls handler function stored in ref.\n\n    var eventListener = function eventListener(event) {\n      return savedHandler.current && savedHandler.current(event);\n    };\n\n    element.addEventListener(eventName, eventListener, handlerOptions);\n    return function () {\n      element.removeEventListener(eventName, eventListener, handlerOptions);\n    };\n  }, [eventName, element, handlerOptions]);\n};\n/**\r\n * Conditionally use `useLayoutEffect` for client *or* `useEffect` for SSR.\r\n * @see <https://github.com/reduxjs/react-redux/blob/c581d480dd675f2645851fb006bef91aeb6ac24d/src/utils/useIsomorphicLayoutEffect.js>\r\n */\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? useLayoutEffect : useEffect;\n/**\r\n * Bind resize observer callback to element.\r\n * @param ref       - Element to bind to.\r\n * @param handler   - Callback for handling entry's bounding rect.\r\n */\n\nvar useResizeObserver = function useResizeObserver(ref, handler) {\n  var observer = useRef();\n  var observe = useCallback(function () {\n    if (ref.current && observer.current) observer.current.observe(ref.current);\n  }, [ref]); // Bind/rebind observer when `handler` changes.\n\n  useIsomorphicLayoutEffect(function () {\n    observer.current = new ResizeObserver(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 1),\n          entry = _ref5[0];\n\n      return handler(entry.contentRect);\n    });\n    observe();\n    return function () {\n      if (observer.current) observer.current.disconnect();\n    };\n  }, [handler, observe]);\n};\n/** Container for clipped item. */\n\n\nvar ThisClipContainer = /*#__PURE__*/forwardRef(function (props, ref) {\n  var style = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    willChange: 'clip',\n    userSelect: 'none',\n    KhtmlUserSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none'\n  };\n  return React.createElement(\"div\", Object.assign({}, props, {\n    style: style,\n    \"data-rcs\": \"clip-item\",\n    ref: ref\n  }));\n});\nThisClipContainer.displayName = 'ThisClipContainer';\n/** Handle container to control position. */\n\nvar ThisHandleContainer = /*#__PURE__*/forwardRef(function (_ref6, ref) {\n  var children = _ref6.children,\n      portrait = _ref6.portrait;\n  var style = {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none'\n  };\n  var innerStyle = {\n    position: 'absolute',\n    width: portrait ? '100%' : undefined,\n    height: portrait ? undefined : '100%',\n    transform: portrait ? 'translateY(-50%)' : 'translateX(-50%)',\n    pointerEvents: 'all'\n  };\n  return React.createElement(\"div\", {\n    style: style,\n    \"data-rcs\": \"handle-container\",\n    ref: ref\n  }, React.createElement(\"div\", {\n    style: innerStyle\n  }, children));\n});\nThisHandleContainer.displayName = 'ThisHandleContainer';\nvar EVENT_PASSIVE_PARAMS = {\n  passive: true\n};\nvar EVENT_CAPTURE_PARAMS = {\n  capture: true,\n  passive: false\n};\n/** Root Comparison slider. */\n\nvar ReactCompareSlider = function ReactCompareSlider(_ref7) {\n  var handle = _ref7.handle,\n      itemOne = _ref7.itemOne,\n      itemTwo = _ref7.itemTwo,\n      _ref7$onlyHandleDragg = _ref7.onlyHandleDraggable,\n      onlyHandleDraggable = _ref7$onlyHandleDragg === void 0 ? false : _ref7$onlyHandleDragg,\n      onPositionChange = _ref7.onPositionChange,\n      _ref7$portrait = _ref7.portrait,\n      portrait = _ref7$portrait === void 0 ? false : _ref7$portrait,\n      _ref7$position = _ref7.position,\n      position = _ref7$position === void 0 ? 50 : _ref7$position,\n      _ref7$boundsPadding = _ref7.boundsPadding,\n      boundsPadding = _ref7$boundsPadding === void 0 ? 0 : _ref7$boundsPadding,\n      _ref7$changePositionO = _ref7.changePositionOnHover,\n      changePositionOnHover = _ref7$changePositionO === void 0 ? false : _ref7$changePositionO,\n      style = _ref7.style,\n      props = _objectWithoutProperties(_ref7, _excluded3);\n\n  /** DOM node of the root element. */\n  var rootContainerRef = useRef(null);\n  /** DOM node of the item that is clipped. */\n\n  var clipContainerRef = useRef(null);\n  /** DOM node of the handle container. */\n\n  var handleContainerRef = useRef(null);\n  /** Current position as a percentage value (initially negative to sync bounds on mount). */\n\n  var internalPositionPc = useRef(position);\n  /** Previous `position` prop value. */\n\n  var prevPropPosition = usePrevious(position);\n  /** Whether user is currently dragging. */\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n  /** Whether component has a `window` event binding. */\n\n\n  var hasWindowBinding = useRef(false);\n  /** Target container for pointer events. */\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      interactiveTarget = _useState4[0],\n      setInteractiveTarget = _useState4[1];\n  /** Whether the bounds of the container element have been synchronised. */\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      didSyncBounds = _useState6[0],\n      setDidSyncBounds = _useState6[1]; // Set target container for pointer events.\n\n\n  useEffect(function () {\n    setInteractiveTarget(onlyHandleDraggable ? handleContainerRef.current : rootContainerRef.current);\n  }, [onlyHandleDraggable]);\n  /** Update internal position value. */\n\n  var updateInternalPosition = useCallback(function updateInternalCall(_ref8) {\n    var x = _ref8.x,\n        y = _ref8.y,\n        isOffset = _ref8.isOffset,\n        _portrait = _ref8.portrait,\n        _boundsPadding = _ref8.boundsPadding;\n\n    var _rootContainerRef$cur = rootContainerRef.current.getBoundingClientRect(),\n        top = _rootContainerRef$cur.top,\n        left = _rootContainerRef$cur.left,\n        width = _rootContainerRef$cur.width,\n        height = _rootContainerRef$cur.height; // Early out if width or height are zero, can't calculate values\n    // from zeros.\n\n\n    if (width === 0 || height === 0) return;\n    /**\r\n     * Pixel position clamped within the container's bounds.\r\n     * @NOTE This does *not* take `boundsPadding` into account because we need\r\n     *       the full coords to correctly position the handle.\r\n     */\n\n    var positionPx = Math.min(Math.max( // Determine bounds based on orientation\n    _portrait ? isOffset ? y - top - window.pageYOffset : y : isOffset ? x - left - window.pageXOffset : x, // Min value\n    0), // Max value\n    _portrait ? height : width);\n    /**\r\n     * Internal position percentage *without* bounds.\r\n     * @NOTE This uses the entire container bounds **without** `boundsPadding`\r\n     *       to get the *real* bounds.\r\n     */\n\n    var nextInternalPositionPc = positionPx / (_portrait ? height : width) * 100;\n    /** Whether the current pixel position meets the min/max bounds. */\n\n    var positionMeetsBounds = _portrait ? positionPx === 0 || positionPx === height : positionPx === 0 || positionPx === width;\n    var canSkipPositionPc = nextInternalPositionPc === internalPositionPc.current && (internalPositionPc.current === 0 || internalPositionPc.current === 100); // Early out if pixel and percentage positions are already at the min/max\n    // to prevent update spamming when the user is sliding outside of the\n    // container.\n\n    if (didSyncBounds && canSkipPositionPc && positionMeetsBounds) {\n      return;\n    } else {\n      setDidSyncBounds(true);\n    } // Set new internal position.\n\n\n    internalPositionPc.current = nextInternalPositionPc;\n    /** Pixel position clamped to extremities *with* bounds padding. */\n\n    var clampedPx = Math.min( // Get largest from pixel position *or* bounds padding.\n    Math.max(positionPx, 0 + _boundsPadding), // Use height *or* width based on orientation.\n    (_portrait ? height : width) - _boundsPadding); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    clipContainerRef.current.style.clip = _portrait ? \"rect(auto,auto,\".concat(clampedPx, \"px,auto)\") : \"rect(auto,\".concat(clampedPx, \"px,auto,auto)\"); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    handleContainerRef.current.style.transform = _portrait ? \"translate3d(0,\".concat(clampedPx, \"px,0)\") : \"translate3d(\".concat(clampedPx, \"px,0,0)\");\n    if (onPositionChange) onPositionChange(internalPositionPc.current);\n  }, [didSyncBounds, onPositionChange]); // Update internal position when other user controllable props change.\n\n  useEffect(function () {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var _rootContainerRef$cur2 = rootContainerRef.current.getBoundingClientRect(),\n        width = _rootContainerRef$cur2.width,\n        height = _rootContainerRef$cur2.height; // Use current internal position if `position` hasn't changed.\n\n\n    var nextPosition = position === prevPropPosition ? internalPositionPc.current : position;\n    updateInternalPosition({\n      portrait: portrait,\n      boundsPadding: boundsPadding,\n      x: width / 100 * nextPosition,\n      y: height / 100 * nextPosition\n    });\n  }, [portrait, position, prevPropPosition, boundsPadding, updateInternalPosition]);\n  /** Handle mouse/touch down. */\n\n  var handlePointerDown = useCallback(function (ev) {\n    ev.preventDefault();\n    updateInternalPosition({\n      portrait: portrait,\n      boundsPadding: boundsPadding,\n      isOffset: true,\n      x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n      y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY\n    });\n    setIsDragging(true);\n  }, [portrait, boundsPadding, updateInternalPosition]);\n  /** Handle mouse/touch move. */\n\n  var handlePointerMove = useCallback(function moveCall(ev) {\n    updateInternalPosition({\n      portrait: portrait,\n      boundsPadding: boundsPadding,\n      isOffset: true,\n      x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n      y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY\n    });\n  }, [portrait, boundsPadding, updateInternalPosition]);\n  /** Handle mouse/touch up. */\n\n  var handlePointerUp = useCallback(function () {\n    setIsDragging(false);\n  }, []);\n  /** Resync internal position on resize. */\n\n  var handleResize = useCallback(function (_ref9) {\n    var width = _ref9.width,\n        height = _ref9.height;\n    updateInternalPosition({\n      portrait: portrait,\n      boundsPadding: boundsPadding,\n      x: width / 100 * internalPositionPc.current,\n      y: height / 100 * internalPositionPc.current\n    });\n  }, [portrait, boundsPadding, updateInternalPosition]); // Allow drag outside of container while pointer is still down.\n\n  useEffect(function () {\n    if (isDragging && !hasWindowBinding.current) {\n      window.addEventListener('mousemove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('mouseup', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchmove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchend', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      hasWindowBinding.current = true;\n    }\n\n    return function () {\n      if (hasWindowBinding.current) {\n        window.removeEventListener('mousemove', handlePointerMove);\n        window.removeEventListener('mouseup', handlePointerUp);\n        window.removeEventListener('touchmove', handlePointerMove);\n        window.removeEventListener('touchend', handlePointerUp);\n        hasWindowBinding.current = false;\n      }\n    };\n  }, [handlePointerMove, handlePointerUp, isDragging]); // Bind resize observer to container.\n\n  useResizeObserver(rootContainerRef, handleResize); // Handle hover events on the container.\n\n  useEffect(function () {\n    var containerRef = rootContainerRef.current;\n\n    var handleMouseLeave = function handleMouseLeave() {\n      if (isDragging) return;\n      handlePointerUp();\n    };\n\n    if (changePositionOnHover) {\n      containerRef.addEventListener('mousemove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      containerRef.addEventListener('mouseleave', handleMouseLeave, EVENT_PASSIVE_PARAMS);\n    }\n\n    return function () {\n      containerRef.removeEventListener('mousemove', handlePointerMove);\n      containerRef.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [changePositionOnHover, handlePointerMove, handlePointerUp, isDragging]);\n  useEventListener('mousedown', handlePointerDown, // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  interactiveTarget, EVENT_CAPTURE_PARAMS);\n  useEventListener('touchstart', handlePointerDown, // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  interactiveTarget, EVENT_CAPTURE_PARAMS); // Use custom handle if requested.\n\n  var Handle = handle || React.createElement(ReactCompareSliderHandle, {\n    portrait: portrait\n  });\n\n  var rootStyle = _objectSpread({\n    position: 'relative',\n    overflow: 'hidden',\n    cursor: isDragging ? portrait ? 'ns-resize' : 'ew-resize' : undefined,\n    userSelect: 'none',\n    KhtmlUserSelect: 'none',\n    msUserSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none'\n  }, style);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    ref: rootContainerRef,\n    style: rootStyle,\n    \"data-rcs\": \"root\"\n  }), itemTwo, React.createElement(ThisClipContainer, {\n    ref: clipContainerRef\n  }, itemOne), React.createElement(ThisHandleContainer, {\n    portrait: portrait,\n    ref: handleContainerRef\n  }, Handle));\n};\n/** Image with defaults from `styleFitContainer` applied. */\n\n\nvar ReactCompareSliderImage = function ReactCompareSliderImage(_ref10) {\n  var style = _ref10.style,\n      props = _objectWithoutProperties(_ref10, _excluded4);\n\n  var rootStyle = styleFitContainer(style);\n  return React.createElement(\"img\", Object.assign({}, props, {\n    style: rootStyle,\n    \"data-rcs\": \"image\"\n  }));\n};\n\nexport { ReactCompareSlider, ReactCompareSliderHandle, ReactCompareSliderImage, styleFitContainer };","map":{"version":3,"sources":["../src/ReactCompareSliderHandle.tsx","../src/utils.ts","../src/ReactCompareSlider.tsx","../src/ReactCompareSliderImage.tsx"],"names":["ThisArrow","flip","style","width","height","borderTop","borderRight","borderBottom","transform","undefined","ReactCompareSliderHandle","props","_style","display","flexDirection","portrait","placeItems","cursor","pointerEvents","color","_linesStyle","flexGrow","backgroundColor","boxShadow","linesStyle","_buttonStyle","gridAutoFlow","gap","placeContent","flexShrink","borderRadius","borderStyle","borderWidth","backdropFilter","WebkitBackdropFilter","buttonStyle","className","React","styleFitContainer","boxSizing","objectFit","objectPosition","maxWidth","usePrevious","value","ref","useRef","useEffect","useEventListener","savedHandler","element","eventListener","event","useIsomorphicLayoutEffect","window","useResizeObserver","observer","observe","useCallback","handler","entry","ThisClipContainer","forwardRef","position","top","left","willChange","userSelect","KhtmlUserSelect","MozUserSelect","WebkitUserSelect","ThisHandleContainer","innerStyle","EVENT_PASSIVE_PARAMS","passive","EVENT_CAPTURE_PARAMS","capture","ReactCompareSlider","onlyHandleDraggable","boundsPadding","changePositionOnHover","rootContainerRef","clipContainerRef","handleContainerRef","internalPositionPc","prevPropPosition","useState","hasWindowBinding","setInteractiveTarget","updateInternalPosition","_boundsPadding","positionPx","_portrait","isOffset","y","x","nextInternalPositionPc","positionMeetsBounds","canSkipPositionPc","didSyncBounds","setDidSyncBounds","clampedPx","Math","onPositionChange","nextPosition","handlePointerDown","ev","pageY","setIsDragging","handlePointerMove","handlePointerUp","handleResize","current","isDragging","containerRef","handleMouseLeave","Handle","handle","rootStyle","overflow","msUserSelect","ReactCompareSliderImage"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { ReactCompareSliderCommonProps } from './types';\n\ninterface ThisArrowProps {\n  /** Whether to flip the arrow direction. */\n  flip?: boolean;\n}\n\nconst ThisArrow: React.FC<ThisArrowProps> = ({ flip }) => {\n  const style: React.CSSProperties = {\n    width: 0,\n    height: 0,\n    borderTop: '8px solid transparent',\n    borderRight: '10px solid',\n    borderBottom: '8px solid transparent',\n    transform: flip ? 'rotate(180deg)' : undefined,\n  };\n\n  return <div style={style} />;\n};\n\n/** Props for `ReactCompareSliderHandle`. */\nexport interface ReactCompareSliderHandleProps\n  extends Pick<ReactCompareSliderCommonProps, 'portrait'> {\n  /** Optional styles for handle the button. */\n  buttonStyle?: React.CSSProperties;\n  /** Optional styles for lines either side of the handle button. */\n  linesStyle?: React.CSSProperties;\n  /** Optional styles for the handle root. */\n  style?: React.CSSProperties;\n}\n\n/** Default `handle`. */\nexport const ReactCompareSliderHandle: React.FC<ReactCompareSliderHandleProps> = ({\n  portrait,\n  buttonStyle,\n  linesStyle,\n  style,\n  ...props\n}): React.ReactElement => {\n  const _style: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: portrait ? 'row' : 'column',\n    placeItems: 'center',\n    height: '100%',\n    cursor: portrait ? 'ns-resize' : 'ew-resize',\n    pointerEvents: 'none',\n    color: '#fff',\n    ...style,\n  };\n\n  const _linesStyle: React.CSSProperties = {\n    flexGrow: 1,\n    height: portrait ? 2 : '100%',\n    width: portrait ? '100%' : 2,\n    backgroundColor: 'currentColor',\n    pointerEvents: 'auto',\n    boxShadow: '0 0 7px rgba(0,0,0,.35)',\n    ...linesStyle,\n  };\n\n  const _buttonStyle: React.CSSProperties = {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gap: 8,\n    placeContent: 'center',\n    flexShrink: 0,\n    width: 56,\n    height: 56,\n    borderRadius: '50%',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    pointerEvents: 'auto',\n    backdropFilter: 'blur(7px)',\n    WebkitBackdropFilter: 'blur(7px)', // For Safari.\n    boxShadow: '0 0 7px rgba(0,0,0,.35)',\n    transform: portrait ? 'rotate(90deg)' : undefined,\n    ...buttonStyle,\n  };\n\n  return (\n    <div className=\"__rcs-handle-root\" {...props} style={_style}>\n      <div className=\"__rcs-handle-line\" style={_linesStyle} />\n      <div className=\"__rcs-handle-button\" style={_buttonStyle}>\n        <ThisArrow />\n        <ThisArrow flip />\n      </div>\n      <div className=\"__rcs-handle-line\" style={_linesStyle} />\n    </div>\n  );\n};\n","import { RefObject, useCallback, useEffect, useLayoutEffect, useRef } from 'react';\n\n/**\n * Stand-alone CSS utility to make replaced elements (`img`, `video`, etc.) fit their\n * container.\n */\nexport const styleFitContainer = ({\n  boxSizing = 'border-box',\n  objectFit = 'cover',\n  objectPosition = 'center',\n  ...props\n}: React.CSSProperties = {}): React.CSSProperties => ({\n  display: 'block',\n  width: '100%',\n  height: '100%',\n  maxWidth: '100%',\n  boxSizing,\n  objectFit,\n  objectPosition,\n  ...props,\n});\n\n/** Store the previous supplied value. */\nexport const usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n\n/**\n * Event listener binding hook.\n * @param eventName      - Event to bind to.\n * @param handler        - Callback handler.\n * @param element        - Element to bind to.\n * @param handlerOptions - Event handler options.\n */\nexport const useEventListener = (\n  eventName: EventListener['name'],\n  handler: EventListener['caller'],\n  element: EventTarget,\n  handlerOptions: AddEventListenerOptions\n): void => {\n  const savedHandler = useRef<EventListener['caller']>();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    // Make sure element supports addEventListener.\n    if (!(element && element.addEventListener)) return;\n\n    // Create event listener that calls handler function stored in ref.\n    const eventListener: EventListener = (event) =>\n      savedHandler.current && savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener, handlerOptions);\n\n    return (): void => {\n      element.removeEventListener(eventName, eventListener, handlerOptions);\n    };\n  }, [eventName, element, handlerOptions]);\n};\n\n/**\n * Conditionally use `useLayoutEffect` for client *or* `useEffect` for SSR.\n * @see <https://github.com/reduxjs/react-redux/blob/c581d480dd675f2645851fb006bef91aeb6ac24d/src/utils/useIsomorphicLayoutEffect.js>\n */\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' && window.document && window.document.createElement\n    ? useLayoutEffect\n    : useEffect;\n\n/** Params passed to `useResizeObserver` `handler` function. */\nexport type UseResizeObserverHandlerParams = DOMRect;\n\n/**\n * Bind resize observer callback to element.\n * @param ref       - Element to bind to.\n * @param handler   - Callback for handling entry's bounding rect.\n */\nexport const useResizeObserver = (\n  ref: RefObject<Element>,\n  handler: (entry: UseResizeObserverHandlerParams) => void\n): void => {\n  const observer = useRef<ResizeObserver>();\n\n  const observe = useCallback(() => {\n    if (ref.current && observer.current) observer.current.observe(ref.current);\n  }, [ref]);\n\n  // Bind/rebind observer when `handler` changes.\n  useIsomorphicLayoutEffect(() => {\n    observer.current = new ResizeObserver(([entry]) => handler(entry.contentRect));\n    observe();\n\n    return (): void => {\n      if (observer.current) observer.current.disconnect();\n    };\n  }, [handler, observe]);\n};\n","import React, { forwardRef, useEffect, useCallback, useRef, useState } from 'react';\n\nimport { ReactCompareSliderHandle } from './ReactCompareSliderHandle';\nimport { ReactCompareSliderCommonProps, ReactCompareSliderPropPosition } from './types';\n\nimport {\n  useEventListener,\n  usePrevious,\n  UseResizeObserverHandlerParams,\n  useResizeObserver,\n} from './utils';\n\n/** Container for clipped item. */\nconst ThisClipContainer = forwardRef<HTMLDivElement, React.HTMLProps<HTMLDivElement>>(\n  (props, ref): React.ReactElement => {\n    const style: React.CSSProperties = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      willChange: 'clip',\n      userSelect: 'none',\n      KhtmlUserSelect: 'none',\n      MozUserSelect: 'none',\n      WebkitUserSelect: 'none',\n    };\n\n    return <div {...props} style={style} data-rcs=\"clip-item\" ref={ref} />;\n  }\n);\n\nThisClipContainer.displayName = 'ThisClipContainer';\n\n/** Handle container to control position. */\nconst ThisHandleContainer = forwardRef<\n  HTMLDivElement,\n  React.HTMLProps<HTMLDivElement> & Pick<ReactCompareSliderCommonProps, 'portrait'>\n>(\n  ({ children, portrait }, ref): React.ReactElement => {\n    const style: React.CSSProperties = {\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n    };\n\n    const innerStyle: React.CSSProperties = {\n      position: 'absolute',\n      width: portrait ? '100%' : undefined,\n      height: portrait ? undefined : '100%',\n      transform: portrait ? 'translateY(-50%)' : 'translateX(-50%)',\n      pointerEvents: 'all',\n    };\n\n    return (\n      <div style={style} data-rcs=\"handle-container\" ref={ref}>\n        <div style={innerStyle}>{children}</div>\n      </div>\n    );\n  }\n);\n\nThisHandleContainer.displayName = 'ThisHandleContainer';\n\n/** Comparison slider properties. */\nexport interface ReactCompareSliderProps extends Partial<ReactCompareSliderCommonProps> {\n  /** Padding to limit the slideable bounds in pixels on the X-axis (landscape) or Y-axis (portrait). */\n  boundsPadding?: number;\n  /** Whether the slider should follow the pointer on hover. */\n  changePositionOnHover?: boolean;\n  /** Custom handle component. */\n  handle?: React.ReactNode;\n  /** First item to show. */\n  itemOne: React.ReactNode;\n  /** Second item to show. */\n  itemTwo: React.ReactNode;\n  /** Whether to only change position when handle is interacted with (useful for touch devices). */\n  onlyHandleDraggable?: boolean;\n  /** Callback on position change with position as percentage. */\n  onPositionChange?: (position: ReactCompareSliderPropPosition) => void;\n}\n\n/** Properties for internal `updateInternalPosition` callback. */\ninterface UpdateInternalPositionProps\n  extends Required<Pick<ReactCompareSliderProps, 'boundsPadding' | 'portrait'>> {\n  /** X coordinate to update to (landscape). */\n  x: number;\n  /** Y coordinate to update to (portrait). */\n  y: number;\n  /** Whether to calculate using page X and Y offsets (required for pointer events). */\n  isOffset?: boolean;\n}\n\nconst EVENT_PASSIVE_PARAMS = { passive: true };\nconst EVENT_CAPTURE_PARAMS = { capture: true, passive: false };\n\n/** Root Comparison slider. */\nexport const ReactCompareSlider: React.FC<\n  ReactCompareSliderProps & React.HtmlHTMLAttributes<HTMLDivElement>\n> = ({\n  handle,\n  itemOne,\n  itemTwo,\n  onlyHandleDraggable = false,\n  onPositionChange,\n  portrait = false,\n  position = 50,\n  boundsPadding = 0,\n  changePositionOnHover = false,\n  style,\n  ...props\n}): React.ReactElement => {\n  /** DOM node of the root element. */\n  const rootContainerRef = useRef<HTMLDivElement>(null);\n  /** DOM node of the item that is clipped. */\n  const clipContainerRef = useRef<HTMLDivElement>(null);\n  /** DOM node of the handle container. */\n  const handleContainerRef = useRef<HTMLDivElement>(null);\n  /** Current position as a percentage value (initially negative to sync bounds on mount). */\n  const internalPositionPc = useRef(position);\n  /** Previous `position` prop value. */\n  const prevPropPosition = usePrevious(position);\n  /** Whether user is currently dragging. */\n  const [isDragging, setIsDragging] = useState(false);\n  /** Whether component has a `window` event binding. */\n  const hasWindowBinding = useRef(false);\n  /** Target container for pointer events. */\n  const [interactiveTarget, setInteractiveTarget] = useState<HTMLDivElement | null>();\n  /** Whether the bounds of the container element have been synchronised. */\n  const [didSyncBounds, setDidSyncBounds] = useState(false);\n\n  // Set target container for pointer events.\n  useEffect(() => {\n    setInteractiveTarget(\n      onlyHandleDraggable ? handleContainerRef.current : rootContainerRef.current\n    );\n  }, [onlyHandleDraggable]);\n\n  /** Update internal position value. */\n  const updateInternalPosition = useCallback(\n    function updateInternalCall({\n      x,\n      y,\n      isOffset,\n      portrait: _portrait,\n      boundsPadding: _boundsPadding,\n    }: UpdateInternalPositionProps) {\n      const {\n        top,\n        left,\n        width,\n        height,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      } = rootContainerRef.current!.getBoundingClientRect();\n\n      // Early out if width or height are zero, can't calculate values\n      // from zeros.\n      if (width === 0 || height === 0) return;\n\n      /**\n       * Pixel position clamped within the container's bounds.\n       * @NOTE This does *not* take `boundsPadding` into account because we need\n       *       the full coords to correctly position the handle.\n       */\n      const positionPx = Math.min(\n        Math.max(\n          // Determine bounds based on orientation\n          _portrait\n            ? isOffset\n              ? y - top - window.pageYOffset\n              : y\n            : isOffset\n            ? x - left - window.pageXOffset\n            : x,\n          // Min value\n          0\n        ),\n        // Max value\n        _portrait ? height : width\n      );\n\n      /**\n       * Internal position percentage *without* bounds.\n       * @NOTE This uses the entire container bounds **without** `boundsPadding`\n       *       to get the *real* bounds.\n       */\n      const nextInternalPositionPc = (positionPx / (_portrait ? height : width)) * 100;\n\n      /** Whether the current pixel position meets the min/max bounds. */\n      const positionMeetsBounds = _portrait\n        ? positionPx === 0 || positionPx === height\n        : positionPx === 0 || positionPx === width;\n\n      const canSkipPositionPc =\n        nextInternalPositionPc === internalPositionPc.current &&\n        (internalPositionPc.current === 0 || internalPositionPc.current === 100);\n\n      // Early out if pixel and percentage positions are already at the min/max\n      // to prevent update spamming when the user is sliding outside of the\n      // container.\n      if (didSyncBounds && canSkipPositionPc && positionMeetsBounds) {\n        return;\n      } else {\n        setDidSyncBounds(true);\n      }\n\n      // Set new internal position.\n      internalPositionPc.current = nextInternalPositionPc;\n\n      /** Pixel position clamped to extremities *with* bounds padding. */\n      const clampedPx = Math.min(\n        // Get largest from pixel position *or* bounds padding.\n        Math.max(positionPx, 0 + _boundsPadding),\n        // Use height *or* width based on orientation.\n        (_portrait ? height : width) - _boundsPadding\n      );\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      clipContainerRef.current!.style.clip = _portrait\n        ? `rect(auto,auto,${clampedPx}px,auto)`\n        : `rect(auto,${clampedPx}px,auto,auto)`;\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      handleContainerRef.current!.style.transform = _portrait\n        ? `translate3d(0,${clampedPx}px,0)`\n        : `translate3d(${clampedPx}px,0,0)`;\n\n      if (onPositionChange) onPositionChange(internalPositionPc.current);\n    },\n    [didSyncBounds, onPositionChange]\n  );\n\n  // Update internal position when other user controllable props change.\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { width, height } = rootContainerRef.current!.getBoundingClientRect();\n\n    // Use current internal position if `position` hasn't changed.\n    const nextPosition =\n      position === prevPropPosition ? internalPositionPc.current : position;\n\n    updateInternalPosition({\n      portrait,\n      boundsPadding,\n      x: (width / 100) * nextPosition,\n      y: (height / 100) * nextPosition,\n    });\n  }, [portrait, position, prevPropPosition, boundsPadding, updateInternalPosition]);\n\n  /** Handle mouse/touch down. */\n  const handlePointerDown = useCallback(\n    (ev: MouseEvent | TouchEvent) => {\n      ev.preventDefault();\n\n      updateInternalPosition({\n        portrait,\n        boundsPadding,\n        isOffset: true,\n        x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n        y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY,\n      });\n\n      setIsDragging(true);\n    },\n    [portrait, boundsPadding, updateInternalPosition]\n  );\n\n  /** Handle mouse/touch move. */\n  const handlePointerMove = useCallback(\n    function moveCall(ev: MouseEvent | TouchEvent) {\n      updateInternalPosition({\n        portrait,\n        boundsPadding,\n        isOffset: true,\n        x: ev instanceof MouseEvent ? ev.pageX : ev.touches[0].pageX,\n        y: ev instanceof MouseEvent ? ev.pageY : ev.touches[0].pageY,\n      });\n    },\n    [portrait, boundsPadding, updateInternalPosition]\n  );\n\n  /** Handle mouse/touch up. */\n  const handlePointerUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  /** Resync internal position on resize. */\n  const handleResize = useCallback(\n    ({ width, height }: UseResizeObserverHandlerParams) => {\n      updateInternalPosition({\n        portrait,\n        boundsPadding,\n        x: (width / 100) * internalPositionPc.current,\n        y: (height / 100) * internalPositionPc.current,\n      });\n    },\n    [portrait, boundsPadding, updateInternalPosition]\n  );\n\n  // Allow drag outside of container while pointer is still down.\n  useEffect(() => {\n    if (isDragging && !hasWindowBinding.current) {\n      window.addEventListener('mousemove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('mouseup', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchmove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      window.addEventListener('touchend', handlePointerUp, EVENT_PASSIVE_PARAMS);\n      hasWindowBinding.current = true;\n    }\n\n    return (): void => {\n      if (hasWindowBinding.current) {\n        window.removeEventListener('mousemove', handlePointerMove);\n        window.removeEventListener('mouseup', handlePointerUp);\n        window.removeEventListener('touchmove', handlePointerMove);\n        window.removeEventListener('touchend', handlePointerUp);\n        hasWindowBinding.current = false;\n      }\n    };\n  }, [handlePointerMove, handlePointerUp, isDragging]);\n\n  // Bind resize observer to container.\n  useResizeObserver(rootContainerRef, handleResize);\n\n  // Handle hover events on the container.\n  useEffect(() => {\n    const containerRef = rootContainerRef.current!;\n\n    const handleMouseLeave = () => {\n      if (isDragging) return;\n      handlePointerUp();\n    };\n\n    if (changePositionOnHover) {\n      containerRef.addEventListener('mousemove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n      containerRef.addEventListener('mouseleave', handleMouseLeave, EVENT_PASSIVE_PARAMS);\n    }\n\n    return () => {\n      containerRef.removeEventListener('mousemove', handlePointerMove);\n      containerRef.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [changePositionOnHover, handlePointerMove, handlePointerUp, isDragging]);\n\n  useEventListener(\n    'mousedown',\n    handlePointerDown,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    interactiveTarget!,\n    EVENT_CAPTURE_PARAMS\n  );\n\n  useEventListener(\n    'touchstart',\n    handlePointerDown,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    interactiveTarget!,\n    EVENT_CAPTURE_PARAMS\n  );\n\n  // Use custom handle if requested.\n  const Handle = handle || <ReactCompareSliderHandle portrait={portrait} />;\n\n  const rootStyle: React.CSSProperties = {\n    position: 'relative',\n    overflow: 'hidden',\n    cursor: isDragging ? (portrait ? 'ns-resize' : 'ew-resize') : undefined,\n    userSelect: 'none',\n    KhtmlUserSelect: 'none',\n    msUserSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none',\n    ...style,\n  };\n\n  return (\n    <div {...props} ref={rootContainerRef} style={rootStyle} data-rcs=\"root\">\n      {itemTwo}\n      <ThisClipContainer ref={clipContainerRef}>{itemOne}</ThisClipContainer>\n      <ThisHandleContainer portrait={portrait} ref={handleContainerRef}>\n        {Handle}\n      </ThisHandleContainer>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { styleFitContainer } from './utils';\n\n/** Props for `ReactCompareSliderImage`. */\nexport type ReactCompareSliderImageProps = React.ImgHTMLAttributes<HTMLImageElement>;\n\n/** Image with defaults from `styleFitContainer` applied. */\nexport const ReactCompareSliderImage: React.FC<ReactCompareSliderImageProps> = ({\n  style,\n  ...props\n}): React.ReactElement => {\n  const rootStyle: React.CSSProperties = styleFitContainer(style);\n\n  return <img {...props} style={rootStyle} data-rcs=\"image\" />;\n};\n"]},"metadata":{},"sourceType":"module"}